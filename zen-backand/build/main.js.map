{"version":3,"sources":["../../src/pages/extras/extras.ts","../../src/pages/buchungen/buchungen.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/timestamp/timestamp.ts","../../src/pages/tabspro/tabspro.ts","../../src/pages/timestamppro/timestamppro.ts","../../src/pages/team/team.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../ws (ignored)","../../src/app/app.component.ts","../../src/providers/globalvar.ts","../../src/pages/crud/crud.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, ViewChild} from '@angular/core';\r\nimport 'rxjs/Rx'\r\nimport { BackandService } from '@backand/angular2-sdk';\r\nimport { NavController } from 'ionic-angular';\r\nimport { TimestampPage } from '../timestamp/timestamp';\r\nimport { GlobalVars } from '../../providers/globalvar';\r\nimport { Platform } from 'ionic-angular';\r\n\r\n@Component({\r\n    templateUrl: 'extras.html',\r\n    selector: 'page-extras',\r\n})\r\nexport class ExtrasPage {\r\n\r\n  public users:any[]=[];\r\n  public noTSFound = false;\r\n  public buchungenMonth:any[][]=[];\r\n  public workTimeHoursDezim:any[] = [];\r\n  public workTimeHours:any[] = [];\r\n  public workTimeMinutes:any[] = [];\r\n                            // Alle Vars für Arbeitszeit in Intervall\r\n  public wtInterval = {     //24*60*60*100 = 86400000, Anzahl ms pro Tag\r\n                            //60*60*1000 = 3600000, Anzahl ms pro Stunde, Offset\r\n    start: new Date(Date.now() - (Date.now() % 86400000) - 86400000 ).toISOString(),\r\n    end: new Date(Date.now() + (86400000 - Date.now() % 86400000) - 3600001).toISOString(),\r\n    sum:0,\r\n    Hours:0,\r\n    HoursDezim:\"\",\r\n    Minutes:0\r\n};                           //Komplexe Berechnungen für Uhrzeitbereinigung\r\n\r\n  constructor(private backand: BackandService, public navCtrl: NavController, public globVars: GlobalVars) {\r\n    //this.globVars.timer=30;\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n\r\n\r\n//  alert(\"Browser-Platform:\"+this.globVars.browserPlatform+\" currPf: \"+this.globVars.currPlatform);\r\n  }\r\n  //angeblich notwendig, damit die Dialoge \"aktiviert\" werden.\r\n //onDeviceReady();\r\n //document.addEventListener(\"deviceready\", onDeviceReady, false);\r\n // alte Bezeichnung??  navigator.notification.beep(2);\r\n  public playTon() {\r\n    var snd = new Audio(\"https://ordination-kutschera.at/Alarm.wav\"); // buffers automatically when created\r\n    snd.play();\r\n  };\r\n\r\n /* geht leider nur als \"native\"\r\n this.dialogs.beep (3); // spielt Sytem-Sound z.B. \"Pfeifen\"\r\n this.dialogs.alert('RI - alert-message')\r\n   .then(() => alert('Dialog erledigt/dismissed'))\r\n   .catch(e => alert('Error displaying dialog'+ e));\r\n this.dialogs.prompt('RI-prompt-message das kann noch viel länger sein, mal sehen, wieviel sich da ausgeht döfgk  dfölklöä k dlöähkhkdölk  ölkdfhlök   dölkhl kd dölkh   dölhkdölkhk  lödfhkk ödlöhk öldflöh  dlöfkhöl ödlk kdöhk lödlhö lödfkdfkhkerkherrjölkjdhljhhj  hjjfkhj jhjh' +\r\n 'ösljg lkgjkgklghg jrejg jgeogireg jgj ergjor gjfdkj  lk ldkg  klgfgj lkfd  glkj  dflkj  dflkgj fdgjl lkfdj  jgj dkg gjfkdlgj  jgjgfkgjdgj',\r\n  'RI-title',[\"OK\",\"Cancel\",\"3.\", \"4.\",\"5.\", \"6.\"], 'defaultText');\r\n*/\r\n//  alert('nach dialogs');\r\n\r\npublic calcInterval(){\r\n this.workTimeHoursDezim = [];\r\n this.workTimeHours = [];\r\n this.workTimeMinutes = [];\r\n this.wtInterval.sum = 0;\r\n\r\n    let params = {\r\n      filter: this.backand.helpers.filter.create('username', this.backand.helpers.filter.operators.text.equals, this.globVars.globCurrUser.name),\r\n      sort:   this.backand.helpers.sort.create('date', this.backand.helpers.sort.orders.desc),\r\n      pageSize: 1000\r\n    }\r\n                                            //Hole letze 1000 TS dieses Users\r\n    this.backand.object.getList('Timestamps2', params)\r\n     .then((res: any) => {\r\n       let i=0;\r\n       let dayCount=0;\r\n       let i_start=0;\r\n       let dateHelper=null;\r\n       let dateHelperStr=\"\";\r\n       let startDate = new Date(this.wtInterval.start);\r\n       let endDate = new Date(this.wtInterval.end);\r\n       let startReached=false;\r\n       this.noTSFound = false;\r\n       this.buchungenMonth = [];\r\n\r\n       while (i<res.data.length){        //Such den ersten TS <= \"end\"\r\n         dateHelper = new Date(res.data[i].date)\r\n         i++;\r\n         if(dateHelper <= endDate) break;\r\n       }\r\n       if(dateHelper <= startDate) {    //Falls erstes Datum bereits <= \"start\"\r\n         this.noTSFound = true;         //-> Keine TS im Zeitraum\r\n         return 0;\r\n       }\r\n       dateHelperStr = dateHelper.toISOString();  //dateHelper = erstes Datum\r\n       i_start = i-1;\r\n                                //Unterteile in einzelne Tage bis start erreicht\r\n       while (i<res.data.length && !startReached){\r\n\r\n         while (i<res.data.length) {        //geh so weit, bis sich Datum ändert\r\n           if(res.data[i].date.substr(0,10) != dateHelperStr.substr(0,10))\r\n           {\r\n              dateHelper = new Date(res.data[i].date) //falls <= \"start\" -> done\r\n              if (dateHelper < startDate) startReached = true;\r\n              break;                         //i ist Index des nächsten Tages\r\n           }\r\n           i++;\r\n         }                                   //Teile bis i\r\n         this.buchungenMonth[dayCount] = res.data.slice(i_start,i);\r\n                                          //Berechne die Arbeitszeit\r\n         let workTimeSum = this.globVars.calcWorkTime(this.buchungenMonth[dayCount]);\r\n         let workTimeSumDate = new Date(workTimeSum);\r\n         this.workTimeHours[dayCount] = workTimeSumDate.getUTCHours();\r\n         this.workTimeMinutes[dayCount] = workTimeSumDate.getUTCMinutes();\r\n                            //Addiere zur Gesamtsumme (in Minuten)\r\n         let justMinutes = this.workTimeHours[dayCount]*60 + this.workTimeMinutes[dayCount]\r\n         this.wtInterval.sum += (justMinutes);\r\n         //Anzeige in Dezimaldarstellung\r\n         this.workTimeHoursDezim[dayCount] = (justMinutes /60).toFixed(2);\r\n\r\n         dateHelperStr = dateHelper.toISOString();    //Update auf neuen Tag\r\n         i_start = i;\r\n         i++;\r\n         dayCount++;\r\n       }\r\n\r\n       this.wtInterval.Hours = Math.floor(this.wtInterval.sum / 60);\r\n       this.wtInterval.Minutes = this.wtInterval.sum % 60;\r\n       this.wtInterval.HoursDezim = (this.wtInterval.sum / 60).toFixed(2);\r\n\r\n\r\n/*\r\n       while (i<res.data.length) {            //Such den ersten TS != heute\r\n         if(res.data[i].date.substr(0,10) !=     todayDate.toISOString().substr(0,10))\r\n         {\r\n           todayIndexBorder = i;\r\n           break;\r\n         }\r\n         i++;\r\n       }\r\n       i=0;         //falls alle TS von heute -> Ende = Ende d. Liste\r\n       if (todayIndexBorder==-1) todayIndexBorder = res.data.length + 1;\r\n\r\n            //Hol dir die Arbeitszeit der heutigen TS und rechne sie in h/m um\r\n       let workTimeSum = this.globVars.calcWorkTime(res.data.slice(0,todayIndexBorder))\r\n       let workTimeSumDate = new Date(workTimeSum);\r\n       this.workTimeHours = workTimeSumDate.getUTCHours();\r\n       this.workTimeMinutes = workTimeSumDate.getUTCMinutes();\r\n\r\n       this.globVars.globCurrUser.worktimeToday = workTimeSum;  //Setze globalen\r\n       clearTimeout(this.globVars.workTimeTimeout);             //Timer\r\n       this.globVars.workTimeCounter();\r\n\r\n       while (i<res.data.length) {          //UTC Strings -> Lokale Zeit\r\n         datumHelper = new Date(res.data[i].date);\r\n         res.data[i].date = datumHelper.toString().substr(0,21);\r\n         weekDay=res.data[i].date.substr(0,3);\r\n         switch (weekDay) {\r\n           case \"Mon\": weekDay =\"Mo\";\r\n             break;\r\n           case \"Tue\": weekDay =\"Di\";\r\n             break;\r\n           case \"Wed\": weekDay =\"Mi\";\r\n             break;\r\n           case \"Thu\": weekDay =\"Do\";\r\n               break;\r\n           case \"Fri\": weekDay =\"Fr\";\r\n               break;\r\n           case \"Sat\": weekDay =\"Sa\";\r\n               break;\r\n           case \"Sun\": weekDay =\"So\";\r\n               break;\r\n         }\r\n         res.data[i].date = weekDay+res.data[i].date.substr(3,21);\r\n         //  alert(i+\"-Datum:\"+res.data[i].datum+\"----\"+res.data[i].date);\r\n         ++i;\r\n       };\r\n       this.buchungentoday = res.data.slice(0,todayIndexBorder);\r\n       this.buchungen = res.data.slice(todayIndexBorder,);\r\n            //ist das erhaltene Array voll, blende Button ein\r\n       if(res.data.length == this.buchungenAmount) this.endOfBuchungen = false;\r\n       else this.endOfBuchungen = true;\r\n*/\r\n  },\r\n  (err: any) => {\r\n    alert(err.data);\r\n\r\n  });\r\n\r\n}\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/extras/extras.ts","import {Component, ViewChild} from '@angular/core';\r\nimport 'rxjs/Rx'\r\nimport { BackandService } from '@backand/angular2-sdk';\r\nimport { NavController } from 'ionic-angular';\r\nimport { TimestampPage } from '../timestamp/timestamp';\r\nimport { GlobalVars } from '../../providers/globalvar';\r\n@Component({\r\n    templateUrl: 'buchungen.html',\r\n    selector: 'page-buchungen',\r\n})\r\nexport class BuchungenPage {\r\n\r\n  public buchungen:any[]=[]; // die einzelnen Buchungszeilen (ex. heute)\r\n  public buchungentoday:any[]=[];\r\n  public workTimeHoursDezim = \"\";\r\n  public workTimeHours = 0;\r\n  public workTimeMinutes = 0;\r\n  public nextBuchungenPage = 2;\r\n  public endOfBuchungen = true;\r\n  public buchungenAmount = 20;\r\n\r\n  constructor(private backand: BackandService, public navCtrl: NavController, public globVars: GlobalVars) {\r\n    //this.globVars.timer=30;\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.reloadBuchungen(null);\r\n    this.buchungenAmount = 20;\r\n  }\r\n\r\npublic reloadBuchungen(refresher){\r\n  this.nextBuchungenPage = 2;         //sobald refesht wird --> Reset aller TS\r\n\r\n  let params = {\r\n    filter: this.backand.helpers.filter.create('username', this.backand.helpers.filter.operators.text.equals, this.globVars.globCurrUser.name),\r\n    sort:   this.backand.helpers.sort.create('date', this.backand.helpers.sort.orders.desc),\r\n    pageSize: this.buchungenAmount,\r\n    pageNumber: 1,\r\n  }\r\n                                          //Hol die letzten TS dieses Users\r\n  this.backand.object.getList('Timestamps2', params)\r\n   .then((res: any) => {\r\n     let i=0;\r\n     let weekDay=\"\";\r\n     let datumHelper=null;\r\n     let todayIndexBorder=-1;\r\n     let todayDate = new Date();\r\n\r\n     while (i<res.data.length) {            //Such den ersten TS != heute\r\n       if(res.data[i].date.substr(0,10) !=     todayDate.toISOString().substr(0,10))\r\n       {\r\n         todayIndexBorder = i;\r\n         break;\r\n       }\r\n       i++;\r\n     }\r\n     i=0;         //falls alle TS von heute -> Ende = Ende d. Liste\r\n     if (todayIndexBorder==-1) todayIndexBorder = res.data.length + 1;\r\n\r\n          //Hol dir die Arbeitszeit der heutigen TS und rechne sie in h/m um\r\n     let workTimeSum = this.globVars.calcWorkTime(res.data.slice(0,todayIndexBorder))\r\n     let workTimeSumDate = new Date(workTimeSum);\r\n     this.workTimeHours = workTimeSumDate.getUTCHours();\r\n     this.workTimeMinutes = workTimeSumDate.getUTCMinutes();\r\n          //Anzeige in Dezimaldarstellung\r\n     let justMinutes = this.workTimeHours*60 + this.workTimeMinutes\r\n     this.workTimeHoursDezim = (justMinutes / 60).toFixed(2);\r\n\r\n     this.globVars.globCurrUser.worktimeToday = workTimeSum;  //Setze globalen\r\n     clearTimeout(this.globVars.workTimeTimeout);             //Timer\r\n     this.globVars.workTimeCounter();\r\n\r\n     while (i<res.data.length) {          //UTC Strings -> Lokale Zeit\r\n       datumHelper = new Date(res.data[i].date);\r\n       res.data[i].date = datumHelper.toString().substr(0,21);\r\n       weekDay=res.data[i].date.substr(0,3);\r\n       switch (weekDay) {\r\n         case \"Mon\": weekDay =\"Mo\";\r\n           break;\r\n         case \"Tue\": weekDay =\"Di\";\r\n           break;\r\n         case \"Wed\": weekDay =\"Mi\";\r\n           break;\r\n         case \"Thu\": weekDay =\"Do\";\r\n             break;\r\n         case \"Fri\": weekDay =\"Fr\";\r\n             break;\r\n         case \"Sat\": weekDay =\"Sa\";\r\n             break;\r\n         case \"Sun\": weekDay =\"So\";\r\n             break;\r\n       }\r\n       res.data[i].date = weekDay+res.data[i].date.substr(3,21);\r\n       //  alert(i+\"-Datum:\"+res.data[i].datum+\"----\"+res.data[i].date);\r\n       ++i;\r\n     };\r\n     this.buchungentoday = res.data.slice(0,todayIndexBorder);\r\n     this.buchungen = res.data.slice(todayIndexBorder,);\r\n          //ist das erhaltene Array voll, blende Button ein\r\n     if(res.data.length == this.buchungenAmount) this.endOfBuchungen = false;\r\n     else this.endOfBuchungen = true;\r\n\r\n    if(refresher){\r\n      refresher.complete();\r\n    }\r\n},\r\n(err: any) => {\r\n  alert(err.data);\r\n  if(refresher){\r\n    refresher.complete();\r\n  }\r\n});\r\n}\r\n\r\npublic moreBuchungen500(){\r\n  this.buchungenAmount += 500;\r\n  this.reloadBuchungen(null);\r\n}\r\n\r\npublic moreBuchungen(){\r\n\r\n  let params = {\r\n    filter: this.backand.helpers.filter.create('username', this.backand.helpers.filter.operators.text.equals, this.globVars.globCurrUser.name),\r\n    sort:   this.backand.helpers.sort.create('date', this.backand.helpers.sort.orders.desc),\r\n    pageSize: 20,\r\n\r\n    pageNumber: this.nextBuchungenPage,      //Hol die nächste Seite\r\n  }\r\n  this.backand.object.getList('Timestamps2', params)\r\n   .then((res: any) => {\r\n     let i=0;\r\n     let weekDay=\"\";\r\n     let datumHelper=null;\r\n\r\n     while (i<res.data.length) {          //UTC Strings -> Lokale Zeit\r\n       datumHelper = new Date(res.data[i].date);\r\n       res.data[i].date = datumHelper.toString().substr(0,21);\r\n       weekDay=res.data[i].date.substr(0,3)\r\n       switch (weekDay) {\r\n         case \"Mon\": weekDay =\"Mo\";\r\n           break;\r\n         case \"Tue\": weekDay =\"Di\";\r\n           break;\r\n         case \"Wed\": weekDay =\"Mi\";\r\n           break;\r\n         case \"Thu\": weekDay =\"Do\";\r\n             break;\r\n         case \"Fri\": weekDay =\"Fr\";\r\n             break;\r\n         case \"Sat\": weekDay =\"Sa\";\r\n             break;\r\n         case \"Sun\": weekDay =\"So\";\r\n             break;\r\n       }\r\n       res.data[i].date = weekDay+res.data[i].date.substr(3,21);\r\n       //  alert(i+\"-Datum:\"+res.data[i].datum+\"----\"+res.data[i].date);\r\n       ++i;\r\n     };\r\n     this.buchungen = this.buchungen.concat(res.data)\r\n     if(res.data.length < 20){\r\n       this.endOfBuchungen = true;\r\n     }\r\n\r\n},\r\n(err: any) => {\r\n  alert(err.data);\r\n});\r\nthis.nextBuchungenPage++;\r\n}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/buchungen/buchungen.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 153;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 153\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 196;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 196\n// module chunks = 0","import { Component } from '@angular/core';\r\nimport { TimestampPage } from '../timestamp/timestamp';\r\nimport { ExtrasPage } from '../extras/extras';\r\nimport { BuchungenPage } from '../buchungen/buchungen';\r\n\r\n@Component({\r\n  templateUrl: 'tabs.html'\r\n})\r\nexport class TabsPage {\r\n  // this tells the tabs component which Pages\r\n  // should be each tab's root Page\r\n  tab1Root: any = TimestampPage;\r\n  tab2Root: any = ExtrasPage;\r\n  tab3Root: any = BuchungenPage;\r\n\r\n  constructor() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\r\nimport { GlobalVars } from '../../providers/globalvar';\r\nimport { NavController } from 'ionic-angular';\r\nimport { LoginPage } from '../login/login';\r\n\r\n\r\n@Component({\r\n  templateUrl: 'timestamp.html',\r\n  selector: 'page-timestamp'\r\n})\r\nexport class TimestampPage {\r\n\r\n  constructor(public globVars: GlobalVars, public navCtrl: NavController ) {\r\n\r\n    this.globVars.timer=this.globVars.logoutTime;\r\n    this.globVars.countDown();\r\n\r\n  }\r\n\r\n  public changeUser(){\r\n    this.navCtrl.push(LoginPage);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/timestamp/timestamp.ts","import { Component } from '@angular/core';\r\nimport { TimestampProPage } from '../timestamppro/timestamppro';\r\nimport { ExtrasPage } from '../extras/extras';\r\nimport { BuchungenPage } from '../buchungen/buchungen';\r\nimport { TeamPage } from '../team/team';\r\n@Component({\r\n  templateUrl: 'tabspro.html'\r\n})\r\nexport class TabsProPage {\r\n  // this tells the tabs component which Pages\r\n  // should be each tab's root Page\r\n  tab1Root: any = TimestampProPage;\r\n  tab2Root: any = TeamPage;\r\n  tab3Root: any = ExtrasPage;\r\n  tab4Root: any = BuchungenPage;\r\n   constructor() {}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabspro/tabspro.ts","import { Component,ViewChild } from '@angular/core';\r\nimport { GlobalVars } from '../../providers/globalvar';\r\nimport { NavController } from 'ionic-angular';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { ToastController } from 'ionic-angular';\r\n\r\n@Component({\r\n  templateUrl: 'timestamppro.html',\r\n  selector: 'page-timestamppro'\r\n})\r\n\r\nexport class TimestampProPage {\r\n@ViewChild('focusInput') myInput;\r\n\r\n  constructor(public globVars: GlobalVars, public navCtrl: NavController,public keyboard: Keyboard,\r\n    private toastCtrl: ToastController)\r\n  {\r\n    var currStatusNr = 0;\r\n    this.globVars.timer=this.globVars.logoutTime;\r\n    if (this.globVars.autoLogout) this.globVars.countDown();\r\n    while (this.globVars.globCurrUser.status != this.globVars.tsTyp[currStatusNr]) {\r\n      ++currStatusNr;\r\n    }\r\n    if (currStatusNr >=1 && currStatusNr <=6 ) globVars.workTimeRuns=true\r\n    else globVars.workTimeRuns=false;\r\n    this.globVars.globCurrUser.worktimeToday=0;\r\n    this.globVars.workTimeCounter();\r\n  //  alert(\"in Timestamppro1:\"+this.globVars.currPlatform);\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.globVars.comment = '';\r\n    if (this.globVars.currPlatform==\"Desktop\")\r\n      setTimeout(() => {\r\n        this.myInput.setFocus();\r\n      },400);\r\n    if (this.globVars.currPlatform==\"Handy\") this.keyboard.close();\r\n  }\r\n\r\n//-----------------------------------------------------------------------------------\r\n  public handleTEXT(){\r\n    this.globVars.comment = this.globVars.comment.trim();\r\n    let buchungOK = true;  // bekommt erst eine Bedeutung, wenn ABBRUCH der Buchung möglich\r\n    let uhrZeit = false;\r\n    if (buchungOK) {\r\n      let ziffern = ['0','1','2','3','4','5','6','7','8','9'];\r\n      //prüfen, ob letzte 2 Buchstaben des Kommentars eine Space + eine Zahl ist - Zahl hinter Kommentar wichtiger, als Zahl vorne\r\n      if (this.globVars.comment.length>1){ //mehr als nur 1 Zeichen Kommentar\r\n        if ((ziffern.indexOf(this.globVars.comment.charAt(this.globVars.comment.length-1)) != -1) && (this.globVars.comment.charAt(this.globVars.comment.length-2) ==' ')) {\r\n//alert(\"Länge >1 + hinten steht eine Arbeits-Typ-Zahl, keine Uhrzeit -> umdrehen!\");\r\n          this.globVars.comment = this.globVars.comment.charAt(this.globVars.comment.length-1) +\r\n            this.globVars.comment.substr(0,this.globVars.comment.length-1);\r\n//alert(\"umgedreht:\"+this.globVars.comment);\r\n        }\r\n      } // hier gehts weiter, nachdem ein etwaig hinten angehängter Arbeits-Typ nach vor kopiert wurde\r\n      if (ziffern.indexOf(this.globVars.comment.charAt(0)) != -1) { // Es steht eine Zahl vorne = Arbeits-Typ\r\n//alert(\"Zahl vorne\");\r\n        let tsTypeNr = Number(this.globVars.comment.charAt(0));\r\n        this.globVars.comment = this.globVars.comment.substr(1).trim();\r\n        var comment = prompt(\"[\"+this.globVars.tsTyp[tsTypeNr]+\"] - Kommentar:\", this.globVars.comment);\r\n        if (comment !== null) {  // kein Abbruch der Buchung\r\n          this.globVars.comment = comment;\r\n          this.globVars.makeStamp(this.globVars.tsTyp[tsTypeNr]);\r\n        }\r\n        else { // Abbruch der Kommentar-Abfrage -> keine Buchung\r\n//alert(\"Abbruch durch User, obwohl Zahl vorne\");\r\n          let toast = this.toastCtrl.create({\r\n            message: '!!!KEIN!!! Zeitstempel - Buchung wurde durch User abgebrochen',\r\n            duration: 4000,\r\n            showCloseButton: false,\r\n            position: 'middle'\r\n          });\r\n          toast.onDidDismiss(() => {});\r\n          toast.present();\r\n  //        this.globVars.comment=\"\";\r\n        };\r\n      } // End-If:  Es steht eine Zahl vorne = Arbeits-Typ\r\n      else {    //1. Buchstabe keine Zahl; -> Arbeits-Typ wird autom auf aktuellen gesetzt\r\n        //this.globVars.comment=\"\";\r\n        var tsTypeNr = this.globVars.tsTyp.indexOf(this.globVars.globCurrUser.status);\r\n        var comment = prompt(\"[\"+this.globVars.tsTyp[tsTypeNr]+\"] - Kommentar:\", this.globVars.comment);\r\n        if (comment !== null) {  // kein Abbruch der Buchung\r\n          this.globVars.comment = comment;\r\n          this.globVars.makeStamp(this.globVars.tsTyp[tsTypeNr]);\r\n        }\r\n        else { // Abbruch der Kommentar-Abfrage -> keine Buchung\r\n          let toast = this.toastCtrl.create({\r\n            message: '!!!KEIN!!! Zeitstempel eingetragen - Buchung wurde durch User abgebrochen',\r\n            duration: 4000,\r\n            showCloseButton: false,\r\n            position: 'middle'\r\n          });\r\n          toast.onDidDismiss(() => {});\r\n          toast.present();\r\n      //    this.globVars.comment=\"\";\r\n        };\r\n      }; // End-Else (1. Buchst keine Zahl - Auto-Ergänzung Stempel)\r\n      if (this.globVars.currPlatform==\"Desktop\") {\r\n        setTimeout(() => {\r\n          this.myInput.setFocus();\r\n        },5000);\r\n      };\r\n      if (this.globVars.currPlatform==\"Handy\") this.keyboard.close();\r\n    }\r\n  }\r\n\r\n  public timestampClick(tsTypeNr:number){\r\n    this.globVars.comment = this.globVars.comment.trim();\r\n    let buchungOK = true;  // bekommt erst eine Bedeutung, wenn ABBRUCH der Buchung möglich\r\n    if (buchungOK) {\r\n      var comment = prompt(\"[\"+this.globVars.tsTyp[tsTypeNr]+\"] - Kommentar:\", this.globVars.comment);\r\n    /*  if (!(comment == null || comment == \"\")) {\r\n        this.globVars.comment = comment;\r\n      }\r\n      */\r\n      if (comment !== null) { // kein Abbruch\r\n        this.globVars.comment = comment;\r\n        this.globVars.makeStamp(this.globVars.tsTyp[tsTypeNr]);\r\n      }\r\n      else {\r\n        let toast = this.toastCtrl.create({\r\n          message: '!!!KEIN!!! Zeitstempel eingetragen - Buchung wurde durch User abgebrochen',\r\n          duration: 4000,\r\n          showCloseButton: false,\r\n          position: 'middle'\r\n        });\r\n        toast.onDidDismiss(() => {});\r\n        toast.present();\r\n      };\r\n    };\r\n    if (this.globVars.currPlatform==\"Desktop\")\r\n    setTimeout(() => {\r\n      this.myInput.setFocus();\r\n    },5000);\r\n    if (this.globVars.currPlatform==\"Handy\") this.keyboard.close();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/timestamppro/timestamppro.ts","import {Component, ViewChild} from '@angular/core';\r\nimport 'rxjs/Rx'\r\nimport { BackandService } from '@backand/angular2-sdk';\r\nimport { NavController } from 'ionic-angular';\r\nimport { TimestampPage } from '../timestamp/timestamp';\r\nimport { GlobalVars } from '../../providers/globalvar';\r\n@Component({\r\n    templateUrl: 'team.html',\r\n    selector: 'page-extras',\r\n})\r\nexport class TeamPage {\r\n\r\n  public users:any[]=[];\r\n\r\n  constructor(private backand: BackandService, public navCtrl: NavController, public globVars: GlobalVars) {\r\n    //this.globVars.timer=30;\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.reloadTeam(null);\r\n  };\r\n\r\n  //Aufruf mit (1) sortiert alphabetisch, (0) zeitlich\r\n  changeSort(alpha:boolean){\r\n    if(alpha){\r\n      this.globVars.teamSortAlpha = true;\r\n    }\r\n    else{\r\n      this.globVars.teamSortAlpha = false;\r\n    }\r\n    this.reloadTeam(null);\r\n  }\r\n\r\n    // Falls mit Parameter aufgerufen -> Refresher-Objekt für Pull-Reload\r\n  reloadTeam(refresher){\r\n    let params: any;\r\n    if (this.globVars.teamSortAlpha) {      //alphabetisch sortiert\r\n      params = {\r\n        filter:\r\n          this.backand.helpers.filter.create('companyid', this.backand.helpers.filter.operators.text.equals, 1),\r\n        sort:   this.backand.helpers.sort.create('name', this.backand.helpers.sort.orders.asc)\r\n      }\r\n    }\r\n    else {                                  //nach Zeitpunkt sortiert\r\n      params = {\r\n      filter:\r\n        this.backand.helpers.filter.create('companyid', this.backand.helpers.filter.operators.text.equals, 1),\r\n      sort:   this.backand.helpers.sort.create('lasttimestampISO', this.backand.helpers.sort.orders.desc)\r\n      }\r\n    };\r\n    this.backand.object.getList('Users', params)\r\n     .then((res: any) => {\r\n       this.users = res.data;\r\n       //alert(\"!\");\r\n       if(refresher){\r\n         refresher.complete();\r\n       }\r\n    },\r\n    (err: any) => {\r\n      alert(err.data);\r\n      if(refresher){\r\n        refresher.complete();\r\n      }\r\n    });\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/team/team.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { LOCALE_ID, NgModule, ErrorHandler } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\r\nimport io from 'socket.io-client';\r\nwindow[\"io\"] = io;\r\n\r\n\r\nimport { MyApp } from './app.component';\r\nimport { LoginPage } from '../pages/login/login';\r\nimport { CrudPage } from '../pages/crud/crud';\r\nimport { TimestampPage } from '../pages/timestamp/timestamp';\r\nimport { TeamPage } from '../pages/team/team';\r\nimport { TabsPage } from '../pages/tabs/tabs';\r\nimport { ExtrasPage } from '../pages/extras/extras';\r\nimport { BuchungenPage } from '../pages/buchungen/buchungen';\r\nimport { TabsProPage } from '../pages/tabspro/tabspro';\r\nimport { TimestampProPage } from '../pages/timestamppro/timestamppro';\r\n\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { Device } from '@ionic-native/device';\r\nimport { BackandService } from '@backand/angular2-sdk';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { Dialogs } from '@ionic-native/dialogs';\r\nimport { NFC, Ndef } from '@ionic-native/nfc';\r\n//import { LocalNotifications } from 'ionic-native';\r\n\r\nimport { GlobalVars } from '../providers/globalvar';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    LoginPage,\r\n    CrudPage,\r\n    TimestampPage,\r\n    TeamPage,\r\n    ExtrasPage,\r\n    BuchungenPage,\r\n    TabsPage,\r\n    TabsProPage,\r\n    TimestampProPage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(MyApp),\r\n  ],\r\n  bootstrap: [ IonicApp ],\r\n  entryComponents: [\r\n    MyApp,\r\n    LoginPage,\r\n    CrudPage,\r\n    TimestampPage,\r\n    ExtrasPage,\r\n    TeamPage,\r\n    BuchungenPage,\r\n    TabsPage,\r\n    TabsProPage,\r\n    TimestampProPage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    BackandService,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\r\n    {provide: LOCALE_ID, useValue: 'de-AT' },\r\n    GlobalVars,\r\n    Device,\r\n    Keyboard,\r\n    Dialogs,\r\n    NFC,\r\n    Ndef,\r\n//    LocalNotifications,\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 346\n// module chunks = 0","import { Component } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport {LoginPage} from '../pages/login/login'\r\nimport { BackandService } from '@backand/angular2-sdk'\r\n\r\n@Component({\r\n  template: `<ion-nav [root]=\"rootPage\"></ion-nav>`\r\n})\r\n\r\nexport class MyApp {\r\n  rootPage;\r\n\r\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen,\r\n  private backand:BackandService) {\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n      backand.init({\r\n        appName: 'julianstodotest',\r\n        signUpToken: '49adba36-4b0c-4154-8ccb-d4d3d89344e2',\r\n        anonymousToken: '2f16bb43-cd8b-4960-96e5-c4f0688a86c8',\r\n        runSocket: true,\r\n        mobilePlatform: 'ionic'\r\n      });\r\n      this.rootPage = LoginPage;\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","// Ideen für Parameter/USER\r\n//   teamSortAlpha (Alex)\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { BackandService } from '@backand/angular2-sdk';\r\nimport { App } from 'ionic-angular';\r\nimport { LoginPage } from '../pages/login/login';\r\nimport { Device } from '@ionic-native/device';\r\nimport { Platform } from 'ionic-angular';\r\nimport { ToastController } from 'ionic-angular';\r\n\r\n\r\n@Injectable()\r\nexport class GlobalVars {\r\n\r\npublic comment:string=\"\";\r\npublic globCurrComp:any;\r\npublic globCurrUser:any;\r\n// obige Struktur wird aus DB übernommen, wenn User festgelegt wird\r\n//         worktimeToday\r\n//\r\n// public workTimeRuns = false; // gibt an, dass die Arbeitszeit für den akt User läuft oder nicht -> ergibt sich aber aus akt User.lasttimestamp\r\npublic timer:number = 0;\r\npublic appNameVers:string=\"KD-ZEN\";\r\npublic appVers:string=\"V1.0.2A\"\r\n\r\npublic testFlag:number = 0;  //AutoLogin mit Julian -> 1, Richie 2, sonst 0\r\n/* später Versuch, ob 1* pro Tag ausloggen sinnvoll ist\r\npublic logouttime:number = 20*60*60; // = 20*60*60 Sekunden= 20 Stunden - einmal pro Tag\r\ntimestamppro: Countdown, Zeile 20 Kommentar entfernt\r\n*/\r\npublic autoLogout = false; // steuert den Logout-Timer\r\npublic logoutTime:number = 7;//20*60*60; // = 20*60*60 Sekunden= 20 Stunden - einmal pro Tag\r\npublic pinLength:number = 3;  // Länge des Login-Pins\r\npublic serverDateStr:string=\"\"; // UTC-Zeit des Logins = univ.ServerZeit (Zeit kommt vom Backand-Server!)\r\npublic serverDate: any;\r\npublic clientDateStr:string = \"\"; // Zeit des Clients\r\npublic clientDate: any; // Zeit des Clients\r\npublic clientDateStrUTC:string = \"\";\r\n//public localDate:Date = null; // lokale Zeit, weil auf PCs in KD falsche Zeit, wegen Windows-Domain-Controller-Fehler +10min\r\npublic clientDateDiff: number = 0; //=localDate-createdat-date(=ServerZeit) =Zeitdiff in ms zwischen localDate und date(universelle Server-Zeit)\r\n// bei jedem Login wird ein Eintrag in die Login-DB gemacht -> im createdAt-Feld steht die aktuelle universelle Zeit\r\n// jetzt wird die Zeitdifferenz der aktuellen Instanz berechnet und als globale Var geführt\r\n// daraus lässt sich über date(Now)(=lokale Zeit)+localDateDiff die \"reale\"Zeit zu jedem Zeitpunkt berechnen, ohne erneut\r\n// beim Server nachfragen zu müssen.\r\npublic currPlatform = \"Desktop\";\r\npublic browserPlatform = navigator.platform;\r\n\r\n// public farbe=\"text-align:center,color:secondary\";\r\npublic KW_akt:number = 0;\r\n// tsTyp=Timestamp-Typ -  Array (0..9) - vorläufig 5,6 nicht verwendet (Projekt1,2)\r\n//                0         1           2           3            4           5          6            7          8          9\r\npublic tsTyp = [\"Krank\",\"Arbeit EIN\",\"AD-Fahrt\",\"Tele-Arbeit\",\"AD-Kunde\",\"Projekt 1\",\"Projekt 2\", \"Pause EIN\",\"Urlaub\", \"Arbeit AUS\"];\r\n//#Register-------------\r\n//     worktimeToday = muss time kleingeschrieben werden, weil in DB so definiert!\r\npublic workTimeRuns:boolean // Arbeitszeit läuft/gestoppt\r\npublic workTimeTodayShow = new Date(); //dient zur Anzeige der aktuellen Arbeitszeit\r\npublic workTimeTodayHour = 1; // dient zur Anzeige der Stunden\r\npublic workTimeTodayMin  = 0; // dient zur Anzeige der Minuten\r\npublic workTimeTimeout:any;   // zum Löschen des laufenden Timeouts für workTime-\r\npublic currDevice:any;\r\npublic teamSortAlpha = false;\r\npublic companies =[\r\n  {\r\n    ID: 1,\r\n    name: \"Kutschera\"\r\n  },\r\n  { ID: 2,\r\n    name: \"TestCompany\"\r\n  }\r\n];\r\n/*  wenn neues Terminal:\r\n          1. Terminal-angaben kopieren\r\n          2. neue devID, usrPIN (Hauptterminal=\"\", MA=\"Team\")\r\n          3. devAnzahl erhöhen\r\n          4. autoLogout setzen\r\n          5. registrierung durchführen\r\n\r\n */\r\npublic devAnzahl = 7;\r\npublic ZEN_Devices = [              // alle Devices werden hier eingetragen\r\n  {\r\n    devID: 1,\r\n    usrPin:\"21\",  // !!!! Pin für Eingabe in Login - muss parallel bleiben zu Datenbank-Users\r\n                 // als Abkürzung, damit CheckUser genutzt werden kann -> später suche aus DB\r\n    regDate: \"15112017\",\r\n    companyID: 1,\r\n    MA: \"Richie\",\r\n    devMAno: 1,\r\n    devTyp:\"Handy\",\r\n    devOs: \"Android6\",\r\n    devBrowser:\"Samsung\",\r\n    devName: \"SamsungA5\",\r\n    devCode: \"r143241\"\r\n  },\r\n  {\r\n    devID: 2,\r\n    usrPin:\"21\",\r\n    regDate: \"r15112017\",\r\n    companyID: 1,\r\n    MA: \"Richie\",\r\n    devMAno: 2,\r\n    devTyp:\"Desktop\",\r\n    devOs: \"Windows10\",\r\n    devBrowser:\"Firefox\",\r\n    devName: \"Ri-Erazer\",\r\n    devCode: \"r143242\"\r\n  },\r\n  {\r\n    devID: 3,\r\n    usrPin:\"21\",\r\n    regDate: \"15112017\",\r\n    companyID: 1,\r\n    MA: \"Richie\",\r\n    devMAno: 3,\r\n    devTyp:\"Desktop\",\r\n    devOs: \"Windows7\",\r\n    devBrowser:\"Firefox\",\r\n    devName: \"Ri-Toshiba\",\r\n    devCode: \"r143243\"\r\n  },\r\n  {\r\n    devID: 4,\r\n    usrPin:\"11\",\r\n    regDate: \"15112017\",\r\n    companyID: 1,\r\n    MA: \"Horst\",\r\n    devMAno: 1,\r\n    devTyp:\"Handy\",\r\n    devOs: \"iOS6\",\r\n    devBrowser:\"Safari\",\r\n    devName: \"Ho-iPhone\",\r\n    devCode: \"r343241\"\r\n  },\r\n  {\r\n    devID: 5,\r\n    usrPin:\"11\",\r\n    regDate: \"15112017\",\r\n    companyID: 1,\r\n    MA: \"Horst\",\r\n    devMAno: 2,\r\n    devTyp:\"Desktop\",\r\n    devBrowser:\"Firefox\",\r\n    devOs: \"Windows7\",\r\n    devName: \"Horst-PC\",\r\n    devCode: \"r432241\"\r\n  },\r\n  {\r\n    devID: 6,\r\n    usrPin:\"23\",\r\n    regDate: \"15112017\",\r\n    companyID: 1,\r\n    MA: \"Emir\",\r\n    devMAno: 1,\r\n    devTyp:\"Desktop\",\r\n    devBrowser:\"Firefox\",\r\n    devOs: \"Windows7\",\r\n    devName: \"Emir-PC\",\r\n    devCode: \"r331241\"\r\n  },\r\n  { // Haupt-Terminal\r\n    devID: 7,\r\n    usrPin:\"\",\r\n    regDate: \"15112017\",\r\n    companyID: 1,\r\n    MA: \"Team\",\r\n    devMAno: 1,\r\n    devTyp:\"Win-Tablet\",\r\n    devBrowser:\"Chrome\",\r\n    devOs: \"Windows10\",\r\n    devName: \"Haupt-Terminal\",\r\n    devCode: \"r331241\"\r\n  },\r\n  {  // nur als Abschluss-Element, damit kein Überlauf bei Abfrage - muss immer letztes bleiben\r\n    devID: 99999,\r\n    usrPin:\"9a9b9c\",\r\n    regDate: \"15112017\",\r\n    companyID: 1,\r\n    MA: \"Dummy\",\r\n    devMAno: 1,\r\n    devTyp:\"Desktop\",\r\n    devBrowser:\"Firefox\",\r\n    devOs: \"Windows7\",\r\n    devName: \"Dummy-PC\",\r\n    devCode: \"r9a9b9c99999\"\r\n  }\r\n];\r\n\r\nconstructor(public backand: BackandService, public app:App, private device:Device, public platform:Platform,\r\nprivate toastCtrl: ToastController) {\r\n  this.globCurrUser = null;\r\n  this.KW_akt = this.KW();\r\n//  alert(\"browserPlatform\" + this.browserPlatform);\r\n  /*\r\n    HP-UX\r\n    Linux i686\r\n    Linux armv7l\r\n    Mac68K\r\n    MacPPC\r\n    MacIntel\r\n    SunOS\r\n    Win16\r\n    Win32\r\n    WinCE\r\n    iPhone\r\n    iPod\r\n    iPad\r\n    Android\r\n    BlackBerry\r\n    Opera\r\n--eigene Handys:\r\n  ARM          - Thomas, Julian(Nokia)\r\n  Linux armv7l - Richie\r\n  Linux armv8l - Sigi\r\n  iPhone       - Horst, David\r\n  MacIntel     - Didi (Desktop)\r\n--eigene Desktops:\r\n  Win32        - Su,To\r\n  Win64        - Ju,Ri,Al\r\n  */\r\n  this.currPlatform=\"Handy\"; // die meisten unbekannten Codes kommen von einem unbek. Handy\r\n  switch (this.browserPlatform) {\r\n    case \"Win64\": this.currPlatform =\"Desktop\";\r\n      break;\r\n    case \"Win32\": this.currPlatform =\"Desktop\";\r\n      break;\r\n    case \"MacIntel\": this.currPlatform =\"Desktop\";\r\n      break;\r\n  }\r\n  //------------Erkennung, ob bereits registriert\r\n    // Test, ob Browser \"Storage\" unterstützt\r\n  if (typeof(Storage) !== \"undefined\") {\r\n    this.currDevice = JSON.parse( window.localStorage.getItem( \"ZEN-Device1\" )); //Device1 steht, weil auf\r\n    //     meinem PC bereits ein \"ZEN-Device\"-Registrierungs-Eintrag vorhanden ist\r\n    //alert(\"currDevice:\" + this.currDevice.MA + this.currDevice.devTyp)\r\n    if (this.currDevice !== null) {  // Erkennung, ob bereits registriert\r\n      alert(\"Bereits registriert! - Da ist ein Device-Objekt\")\r\n    };\r\n    // dieses Device ist noch nicht registriert!!! - weiter zum LOGIN\r\n    //  alert(\"KEIN Device-Objekt gespeichert-weiter zum Login\")\r\n  }\r\n  else alert(\"Ihr Browser unterstützt keine lokale Speicherung\");\r\n}\r\n    //-------------------\r\n    // User muss anfragen (TG) um Device-Registrierung:\r\n    //     dabei Daten über Gerät an Zentrale: Handy(Android/iOS)/PC(Browser(Firefox/Google)/W10)/\r\n    //     Exclusiv-Zugriff, etc.\r\n    //     -> Zentrale trägt Daten in ProgCode ein und in User-DB ein ->User-Registrierungs-Code wird per TG rückübermittelt)\r\n    //        User-Reg-Code beginnt mit \"r\" - dient zur Unterscheidung von einer PIN-Eingabe\r\n    // keine USER-DB nötig - wird vor ORT gespeichert und im ZEN-Programm-Code\r\n    // statt PIN wird der Reg-Code eingegebene\r\n    // -> Bestätigungsmeldung: Dieses Gerät wird als Device Nr.X für MA[] registriert\r\n    // wird auf Device im localStorage eingetragen: nur ein Schlüsselwert:\"r143241\" - \"Richie\"\r\n    // ???in USER-DB wird vermerkt, welches Gerät welchen Code bekommt und dass Code schon vergeben\r\n    // Beschreibung Gerät:\r\n    // Bei ZEN-Programmstart wird getestet, welches Device es ist\r\n    // Gerät(x) von MA -> in Array(in Prog-Code) suchen -> Voreinstellungen laden (Handy/PC, TimeOffset, etc.)\r\n    //  -> statt \"Login\" (wie Cookie)\r\n    //-------------\r\n\r\n    // storage-Test\r\n    //window.localStorage.setItem( \"Richie\", \"Strausz\" );\r\n    //    if (window.localStorage.getItem( \"Richie\" )==null)\r\n    //      alert(window.localStorage.getItem( \"Richie1\" ))\r\n    //    else alert(\"doch anders\");\r\n\r\n// Handy/Desktop geht nur, wenn Native, Browser-Angabe auf Handy unsicher\r\n//    if (this.platform.is('core')) this.currPlatform = \"Desktop\";\r\n//    else {\r\n//      this.currPlatform = \"Handy\";        //--> Melden, dass jemand als \"Handy\" beim START schon gesetzt ist!\r\n\r\npublic workTimeCounter(){\r\n// update alle 60 sec\r\n  let update = 60000;\r\n  this.workTimeTodayShow = new Date(this.globCurrUser.worktimeToday);\r\n  this.workTimeTodayHour = this.workTimeTodayShow.getUTCHours();\r\n  this.workTimeTodayMin  = this.workTimeTodayShow.getUTCMinutes();\r\n  //alert(\"WTT:\"+this.globCurrUser.worktimeToday+\" - Show: \"+this.workTimeTodayShow.toISOString()+\"-Hour:\"+this.workTimeTodayHour+\"-Min:\"+this.workTimeTodayMin);\r\n  if (this.workTimeRuns) this.globCurrUser.worktimeToday=this.globCurrUser.worktimeToday+update;\r\n  //  else this.workPauseToday=  --> könnte Pausenzeiten auch miterfassen\r\n  this.workTimeTimeout = setTimeout(()=>{this.workTimeCounter()}, update);\r\n  //  clearTimeout(this.workTimeTimout);\r\n}\r\n\r\npublic countDown(){\r\nthis.timer = this.timer - 1;\r\n  if (this.timer > 0 ){\r\n    setTimeout(()=>{this.countDown()},1000);\r\n  }\r\n  else{\r\n    this.app.getRootNav().setRoot(LoginPage);\r\n  }\r\n    //alert(this.timer);\r\n}\r\n\r\npublic getTSNumber(stampString:string){\r\n  let TSNumber = 1;\r\n  switch(stampString){\r\n    case this.tsTyp[2]: TSNumber=2; break;\r\n    case this.tsTyp[3]: TSNumber=3; break;\r\n    case this.tsTyp[4]: TSNumber=4; break;\r\n    case this.tsTyp[5]: TSNumber=5; break;\r\n    case this.tsTyp[6]: TSNumber=6; break;\r\n    case this.tsTyp[7]: TSNumber=7; break;\r\n    case this.tsTyp[8]: TSNumber=8; break;\r\n    case this.tsTyp[9]: TSNumber=9; break;\r\n    case this.tsTyp[0]: TSNumber=0; break;\r\n  }\r\n  return(TSNumber);\r\n}\r\n\r\npublic calcWorkTime(tsList:any[]){\r\n//Berechnet Arbeitszeit für eine Liste von TS\r\n  let workON=false;\r\n  let begin=null;\r\n  let end=null;\r\n  let sum=0;\r\n\r\n  for(let i=tsList.length-1; i>-1; i--){  //Suche nach Arbeitsbeginn\r\n    let tsNumber = this.getTSNumber(tsList[i].status);\r\n    if(tsNumber>0 && tsNumber<7){\r\n      begin = new Date(tsList[i].date);\r\n      begin -= begin % 60000;             //Runden auf volle Minuten\r\n      workON = true;\r\n\r\n      for(; i>-1; --i){                   //Suche nach Arbeitsende\r\n        tsNumber = this.getTSNumber(tsList[i].status);\r\n        if(tsNumber==0 || tsNumber>6){\r\n          end = new Date(tsList[i].date);\r\n          end -= end % 60000;\r\n          sum += end - begin;\r\n          workON = false;\r\n          break;\r\n        }\r\n      }\r\n    }                                     //Wiederhole bis zum Ende der Liste\r\n  }\r\n  if(workON){ //Falls kein Arbeitsende gefunden, nimm Differenz zu jetziger Zeit\r\n    end = (Date.now() - this.clientDateDiff);\r\n    end -= end % 60000;\r\n    sum += end - begin;\r\n  }\r\n  return(sum);\r\n}\r\n\r\npublic makeStamp(stampType:string){\r\n  var makeStamp = true;\r\n  var neuStampTypeNr: number;\r\n  var altStampTypeNr: number;\r\n//  var currComm : string;\r\n  var splitCommArr: any;\r\n// im Folgenden: Def: Arbeits-Typ=(1..6)=(Arbeit EIN, AD-Fahrt, Tele-Arbeit, AD-Kunde, P1, P2,)\r\n//               Def: Arbeits-Stop-Typ= (Pause=7, Urlaub=8, Arbeit AUS=9, Krank=  0)\r\n//               Def: AS = alter status, NS = neuer Status\r\n  //stampTypNr wird gesetzt durch Vergleich, bis passt\r\n  altStampTypeNr=0;\r\n  while (this.globCurrUser.status != this.tsTyp[altStampTypeNr]) {\r\n    ++altStampTypeNr;\r\n  };\r\n  neuStampTypeNr=0;\r\n  while (stampType != this.tsTyp[neuStampTypeNr]) {\r\n    ++neuStampTypeNr;\r\n  };\r\n  //alert(\"MAKESTAMP-Start- alter Status:\"+this.globCurrUser.status+\"-altStampTypeNr:\"+altStampTypeNr+\"-neuer Status:\"+stampType+\"-neuStampTypeNr:\"+neuStampTypeNr);\r\n  //if AS = Arbeits-Stop-Typ=(Urlaub=8,Arbeit AUS=9,Krank=0)\r\n  if ((altStampTypeNr==0 || altStampTypeNr==8 )|| altStampTypeNr==9)\r\n    //&& NS = Arbeits-Typ (1..6)= Übergang von Arbeits-Stop auf Arbeit -> worktimeToday auf 0!\r\n    if (neuStampTypeNr>=1 && neuStampTypeNr<=6) {\r\n      // !!! könnte auch Re-Start von Arbeit am selben Tag(oder nach Mitternacht) sein\r\n    //  alert(\"Tagesarbeitszeit wird auf 0 gesetzt!\"); //T-Arbeitszeit auf Null setzen = 0\r\n      this.globCurrUser.worktimeToday= 0;\r\n      this.workTimeRuns=true;\r\n\r\n    }\r\n    // NS ist AUCH Arbeits-Stop-Typ+Pause (7,8,9,0) -> Zweitstempel, warum auch immer\r\n    else\r\n      if (neuStampTypeNr==7) { // NS=Pause=7\r\n      //  alert(\"Übergang von Arbeits-Stop-Typ auf Pause\");\r\n      } // else NS=(8,9,0)\r\n      else {\r\n      //  alert(\"Übergang von Status: \"+this.globCurrUser.status+\" auf: \"+ stampType+ \"- Arbeitszeit läuft weiterhin nicht\");\r\n      }\r\n    //else-Ende\r\n  else // = AS ist Arbeits-Typ (1..6) oder Pause=7\r\n\r\n    if (altStampTypeNr==7) { // AS = Pause=7\r\n      // AS=Pause=7 && NS = Arbeits-Typen\r\n      if (neuStampTypeNr>=1 && neuStampTypeNr<=6) {\r\n        //alert(\"Tagesarbeitszeit läuft ab jetzt weiter\");\r\n        this.workTimeRuns=true;\r\n      }\r\n      else { // AS=Pause=7 && NS = 7,8,9,0 = Pause+Arbeits-Stop-Typ\r\n        //workTimeRuns bleibt auf STOP\r\n        this.workTimeRuns=false;\r\n        //alert(\"alter Status= Pause=7 && neuer Status= 7,8,9,0\"+this.workTimeRuns);\r\n      }  //else-Ende\r\n    }\r\n    else // AS = Arbeits-Typ (1..6)\r\n      if (neuStampTypeNr>=1 && neuStampTypeNr<=6) {// Arbeit läuft weiter\r\n        //alert(\"alter Status= Arbeits-Typ(=1..6) && neuer Status= Arbeits-Typ (=1..6)\");\r\n      }\r\n      else\r\n        if (neuStampTypeNr==7) {// von Arbeit auf Pause\r\n      //    alert (\"von Arbeit auf Pause\");\r\n          // letzte Arbeitszeit wird zu worktimeToday hinzugezählt\r\n              // aktuelle Zeit - lasttimestamp = Arbeitszeit (ms)\r\n          this.workTimeRuns=false;\r\n        }\r\n        else {  // von Arbeit auf Arbeits-Stop\r\n        //  alert(\"alter Status= Arbeits-Typ(=1..6) && neuer Status= Arbeits-Stop-Typ(=8,9,0)\");\r\n          // letzte Arbeitszeit wird zu worktimeToday hinzugezählt\r\n          this.workTimeRuns=false;\r\n        }\r\n      //else-ende\r\n    //else-ende\r\n  //else-ende\r\n  //Ende der Abfrage bzgl worktimeToday\r\n  //alert(\"Ende der worktimeToday-Behandlung erreicht\");\r\n  // else-> wenn \"alter Status\"=Arbeits-Typ (1..6) && (\"neuer Status\"= Arbeits-Stop-Typ) -> worktimeToday anhalten\r\n  // else-> wenn \"alter Status\"= (Pause) && (\"neuer Status\"= Arbeits-Typ(1..60))-> Zeit weiterlaufen lassen\r\n  // else if (this.clobCurrUser.status=.....)\r\n  var korrektur = 0; // 0..kein Korrektur-Tag, 1..Korrektur OK, 2.. Korrektur Fehler (z.B. Zeit falsch angegeben,etc.)\r\n  if (makeStamp) {\r\n    //ServerZeit wird hochgerechnet aus client + Diff;\r\n    let ziffern = ['0','1','2','3','4','5','6','7','8','9'];\r\n    let uhrZiffern = ['0','1','2','3','4','5','6'];\r\n    let currComment = this.comment;\r\n//alert (\"makestamp1:\"+ currComment+\"!\");\r\n    if (currComment.charAt(0) == \"#\" || currComment.charAt(0) == \".\") currComment = currComment.substr(1).trim(); // \"#\" od. \".\" wird wegggeschnitten\r\n    //alert (\"makestamp2= #:\"+ currComment+\"!\");\r\n/*      if (currComment.charAt(0) == \"k\" || currComment.charAt(0) == \"K\") { // möglicherweise Korrekturbuchung\r\n        if (currComment.charAt(1) == \" \" || uhrErsteZiffer.indexOf(currComment.charAt(1)) !=-1) {  // Korrektur-Zeit wird eingearbeitet\r\n          currComment = currComment.substr(1).trim();\r\n          korrektur=2;\r\n        }\r\n      }\r\n*/\r\n    if (currComment.charAt(0) == \"k\" || currComment.charAt(0) == \"K\") {  // Korrektur-Zeit wird eingearbeitet\r\n//alert (\"makestamp3= #k:\"+ currComment+\"!\");\r\n      korrektur = 2;  // wenn später keine korrekte Uhrzeit festgestellt wird, dann Fehler\r\n      // if erste vier Buchstaben sind Zahlen -> einfügen von \":\" in currComment\r\n      currComment = currComment.substr(1).trim(); // \"k\" wird weggeschnitten und getrimmt\r\n      var n = currComment.indexOf(\".\");\r\n  //alert(currComment+\"--n:\"+n);\r\n      if (n == 2)  {// ersetze . durch : , wenn gleich hinter #k-> wahrscheinlich Uhrzeit gemeint!\r\n        currComment = currComment.replace(\".\",\":\");\r\n  //alert(\"Uhrzeit mit . -> Uhrzeit mit : -\"+currComment);\r\n      };\r\n      // if erste vier Buchstaben sind Zahlen -> einfügen von \":\" in currComment\r\n      if ((uhrZiffern.indexOf(currComment.charAt(0)) !=-1) && (ziffern.indexOf(currComment.charAt(1)) !=-1) &&\r\n        (uhrZiffern.indexOf(currComment.charAt(2)) !=-1) && (ziffern.indexOf(currComment.charAt(3)) !=-1)) {  // Bsp: \"1400\" sind nur Uhrzeit-Ziffern ohne \":\"\r\n        let part1=currComment.slice(0,2);\r\n        let part2=currComment.slice(2);\r\n        currComment = part1 + \":\" + part2;\r\n      };\r\n      // entweder: keine vier Ziffern || vier Ziffern mit \":\" in der Mitte\r\n      n = currComment.indexOf(':');\r\n      if (n !== -1) {  // es gibt einen  Doppelpunkt im Kommentar\r\n        if (n == 2) {  // Uhrzeit steht am Anfang des Kommentar\r\n         //zerlegen in HH:MM\r\n          var uhr = currComment.substr(0,5);\r\n//alert (\"Uhr:\"+ uhr+\"!\");\r\n          splitCommArr = uhr.split(':');\r\n          if (splitCommArr.length = 2) {\r\n//alert(\"Stunden:\"+ splitCommArr[0]+\"Minuten:\"+ splitCommArr[1]); //Minuten\r\n            if ((splitCommArr[0].length==2) && (splitCommArr[1].length==2)) { // könnte Uhrzeit + Zusatz-Kommentar sein\r\n//alert (\"wahrscheinlich Uhrzeit:\"+ uhr+\"!\");\r\n              if ((uhrZiffern.indexOf(uhr.charAt(0)) !=-1) && (ziffern.indexOf(uhr.charAt(1)) !=-1) && (uhr.charAt(2) ==':')\r\n              && (uhrZiffern.indexOf(uhr.charAt(3)) !=-1) && (ziffern.indexOf(uhr.charAt(4)) !=-1)) {  // sind nur Uhrzeit-Ziffern\r\n                if ((Number((uhr.charAt(0)+uhr.charAt(1))) >= 0) && (Number((uhr.charAt(0)+uhr.charAt(1))) <= 23) &&\r\n                  (Number((uhr.charAt(3)+uhr.charAt(4))) <= 59) ) { // ist wirklich Uhrzeit\r\n//alert(\"=Uhrzeit!\");\r\n                  korrektur = 1;\r\n                };\r\n              };\r\n            };\r\n          };\r\n        };\r\n        if (korrektur != 1) {\r\n          this.comment = 'Falsches Zeit-Format: '+this.comment;\r\n        };\r\n      }\r\n      else { // es gibt KEINEN \":\" im Kommentar ->keine Uhrzeit im Kommentar -> normal eintragen\r\n        korrektur = 0;\r\n        //this.comment = 'Keine Uhrzeit angegeben: '+this.comment;\r\n      }\r\n    }\r\n    //    if (currComment.charAt(0) == \"a\" || currComment.charAt(0) ==\"A\") {  // Korrektur-Zeit wird eingearbeitet\r\n    //      alert(\"Hier kommt später der Alarm\");  // .a30 -> 30 Min Alarm\r\n    //    }\r\n    //  };\r\n//alert(\"comment:\"+this.comment+\"currComment:\"+currComment);\r\n\r\n    let clientMillisec = Date.now();\r\n    this.clientDate = new Date(clientMillisec);\r\n    this.serverDate = new Date(clientMillisec - this.clientDateDiff);\r\n    if (korrektur==1) {  // wenn Korrekturbuchung, dann serverDate auf die Zeit der Korrektur-Texts\r\n      this.serverDate.setHours(splitCommArr[0]);\r\n      this.serverDate.setMinutes(splitCommArr[1]);\r\n    //  alert(\"serverDate(korrigiert):\"+this.serverDate.toISOString());\r\n    };\r\n    if (korrektur !==2) { // Buchung soll durchgeführt werden\r\n      let lastTimeStamp = new Date (this.globCurrUser.lasttimestampISO);\r\n\r\n      //  alert(\"sD:\"+this.serverDate.toISOString()+\"ltsISO:\"+lastTimeStamp.toISOString());\r\n      if (this.serverDate > new Date(clientMillisec - this.clientDateDiff)) {  //die Korrektur-Buchung ist in der Zukunft\r\n        var inp = prompt(\"!!! ACHTUNG !!!\", \"Korrektur-Zeit wird GESTERN eingetragen - OK?\");\r\n        if (inp !== null) {  // kein Abbruch der Buchung\r\n          this.serverDate = new Date((this.serverDate.setDate(this.serverDate.getDate()-1)))\r\n          //alert(\"gestern:\" + this.serverDate.toString());\r\n        }\r\n        else korrektur = 2; // nicht eintragen !!!\r\n      }\r\n  //alert(\"test:\"+this.comment + \"korr:\"+korrektur);\r\n      if (korrektur == 1 && this.comment[0] != \"#\"){  // alle korrekturen werden auf \"#...\" gesetzt\r\n        if (this.comment[0]== \".\") this.comment = this.comment.substr(1);\r\n        this.comment = \"#\" + this.comment;\r\n      }\r\n      if (this.serverDate <= new Date(clientMillisec - this.clientDateDiff)) {  //die Korrektur-Buchung ist NICHT in der Zukunft\r\n        if (this.serverDate > lastTimeStamp) {  //die Buchung sollte auch auf TOP angezeigt werden\r\n      // alert(\"das zu buchende Datum ist neuer als der letzte Timestamp\");\r\n      // normale Buchung vorbereiten\r\n\r\n      // Server-Zeitproblem auf KD-Desktops -> geht 10 min vor - Workaround\r\n      //if (this.currPlatform == \"Desktop\") currMillisec-=(600*1000);\r\n      // Workaround-Ende\r\n\r\n      //this.clientDate = (new Date(currMillisec)); // ISO-damit alphabet.Sortierung möglich\r\n      //Umwandlung von String-> Date-Objekt OK:\r\n      // Stunden,Minuten mit führender 0\r\n\r\n          let Hours=\"\";\r\n          let Minutes=\"\";\r\n          if (this.serverDate.getHours()<10) Hours=\"0\"+this.serverDate.getHours()\r\n          else Hours=this.serverDate.getHours().toString();\r\n          if (this.serverDate.getMinutes()<10) Minutes=\"0\"+this.serverDate.getMinutes()\r\n          else Minutes=this.serverDate.getMinutes().toString();\r\n          this.globCurrUser.lasttimestamp =  this.serverDate.getDate() + \".\" + (this.serverDate.getMonth() + 1) + \". um \" + Hours + \":\" + Minutes;\r\n          this.globCurrUser.lasttimestampISO = this.serverDate.toISOString(); //schreibt in Orts-Zeit\r\n        //this.globCurrUser.lasttimestampUTC = this.localDate.toUTCString(); //schreibt in ISO Zeit\r\n        //  this.globCurrUser.lasttimestampUTC_d = this.localDate; //schreibt in Backand-\"Date\"-Feld -> ISO-Zeit\r\n          this.globCurrUser.lastcomment = this.comment;\r\n          this.globCurrUser.status=stampType;\r\n          this.backand.object.update('Users', this.globCurrUser.id, this.globCurrUser);\r\n        };\r\n         // if-Ende: \"normale Buchung\" vorbereiten\r\n         // if \"autoLogout\" = Kennung vorläufig für HAUPT-Terminal\r\n         let hauptTerminal = \"\";\r\n         if (this.autoLogout) hauptTerminal =\"-!!!KD!!!\"\r\n        this.backand.object.create('Timestamps2', \"{'date':'\" + this.serverDate.toISOString() + \"', 'status':'\" +\r\n        stampType + \"','userid':'\" + this.globCurrUser.id + \"','username':'\" +\r\n        this.globCurrUser.name + \"','comment':'\" + this.comment + \"','device':'\" + this.currPlatform + hauptTerminal +\r\n        \"','browserPlatform':'\" + navigator.platform + \"'}\")\r\n        .then((res: any) => {\r\n    //      alert(\"nach Create: ms->Date:\"+this.serverDate.getTime()+ \"cms:\" + clientMillisec +\"clientdiff-ms\"+this.clientDateDiff+\r\n    //      \"serverDate:\" + this.serverDate.toLocaleString()+\r\n    //      \"--clientDate:\" + this.clientDate.toLocaleString()+\"!\");\r\n          if (korrektur ==0) {\r\n            let toast = this.toastCtrl.create({\r\n              message: 'Zeitstempel wurde eingetragen',\r\n              duration: 3000,\r\n              position: 'top'\r\n            });\r\n            toast.onDidDismiss(() => {});\r\n            toast.present();\r\n            this.comment = \"\";\r\n          }\r\n          else {  // korrektur ==1\r\n            let toast = this.toastCtrl.create({\r\n              message: 'Korrektur-Zeitstempel wurde eingetragen',\r\n              duration: 4000,\r\n              position: 'top'\r\n            });\r\n            toast.onDidDismiss(() => {});\r\n            toast.present();\r\n            this.comment = \"\";\r\n          };\r\n        },\r\n        (err: any) => {\r\n          alert(err.data);\r\n        });\r\n        this.comment = \"\";\r\n      }\r\n      else { // Fehler\r\n        let toast = this.toastCtrl.create({\r\n          message: '!!!KEIN!!! Zeitstempel eingetragen - Korrektur-Zeit in Zukunft',\r\n          duration: 4000,\r\n          showCloseButton: false,\r\n          position: 'middle'\r\n        });\r\n        toast.onDidDismiss(() => {});\r\n        toast.present();\r\n      };\r\n    }\r\n    else {   // korrektur=2 Fehler in Korrektur-Kommentar ->Abbruch\r\n      let toast = this.toastCtrl.create({\r\n        message: '!!!KEIN!!! Zeitstempel eingetragen - Fehler bei Korrektur-Text',\r\n        duration: 4000,\r\n        showCloseButton: false,\r\n        position: 'middle'\r\n      });\r\n      toast.onDidDismiss(() => {});\r\n      toast.present();\r\n    };\r\n  } // end-if makestamp\r\n\r\n/*    READ ID OF CREATED TIMESTAMP\r\n  .then((res: any) => {\r\n    let items:any;\r\n    items = res.data.__metadata;\r\n    alert(items.id);\r\n  },\r\n  (err: any) => {\r\n    alert(err.data);\r\n  });\r\n*/\r\n}\r\n\r\npublic KW(){\r\n  var date = new Date();\r\n  // Get thursday\r\n  // In JavaScript the Sunday has value 0 as return value of getDay() function.\r\n  // So we have to order them first ascending from Monday to Sunday\r\n  // Monday: ((1+6) % 7) = 0\r\n  // Tuesday ((2+6) % 7) = 1\r\n  // Wednesday: ((3+6) % 7) = 2\r\n  // Thursday: ((4+6) % 7) = 3\r\n  // Friday: ((5+6) % 7) = 4\r\n  // Saturday: ((6+6) % 7) = 5\r\n  // Sunday: ((0+6) % 7) = 6\r\n  // (3 - result) is necessary to get the Thursday of the current week.\r\n  // If we want to have Tuesday it would be (1-result)\r\n  var currentThursday = new Date(date.getTime() +(3-((date.getDay()+6) % 7)) * 86400000);\r\n  // At the beginnig or end of a year the thursday could be in another year.\r\n  var yearOfThursday = currentThursday.getFullYear();\r\n  // Get first Thursday of the year\r\n  var firstThursday = new Date(new Date(yearOfThursday,0,4).getTime() +(3-((new Date(yearOfThursday,0,4).getDay()+6) % 7)) * 86400000);\r\n  // +1 we start with week number 1\r\n  // +0.5 an easy and dirty way to round result (in combinationen with Math.floor)\r\n  var KW = Math.floor(1 + 0.5 + (currentThursday.getTime() - firstThursday.getTime()) / 86400000/7);\r\n  return KW;\r\n}\r\n\r\n/*  setglobCurrUserId(value) {\r\n   this.globCurrUserId = value;\r\n  }\r\n\r\n  getglobCurrUserId() {\r\n    return this.globCurrUserId;\r\n  }\r\n*/\r\n\r\n} //export Class: GlobalVars\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/globalvar.ts","import {Component} from '@angular/core';\r\nimport { BackandService } from '@backand/angular2-sdk';\r\nimport { GlobalVars } from '../../providers/globalvar';\r\n\r\n@Component({\r\n  templateUrl: 'crud.html',\r\n  selector: 'page-crud'\r\n})\r\nexport class CrudPage {\r\n\r\n  name:string = \"Name\";\r\n  description:string = 'Wonderful';\r\n  public items:any[] = [];\r\n  searchQuery: string;\r\n\r\n  constructor(private backand: BackandService, public globalVars: GlobalVars) {\r\n/*    this.searchQuery = '';\r\n    let that = this;\r\n    this.backand.on(\"items_updated\",\r\n      (res: any) => {\r\n        alert(\"!\");\r\n        let a = res as any[];\r\n        let newItem = {};\r\n        a.forEach((kv)=> newItem[kv.Key] = kv.Value);\r\n        that.items.unshift(newItem);\r\n      }\r\n    );\r\n  */\r\n  }\r\n/*\r\n  public postItem() {\r\n   let item = {\r\n      name: this.name,\r\n      description: this.description\r\n    };\r\n\r\n    if (item.name && item.description) {\r\n      this.backand.object.create('todo', item)\r\n      .then((res: any) => {\r\n        // add to beginning of array\r\n        this.items.unshift({ id: null, name: this.name, description: this.description });\r\n        this.name = '';\r\n        this.description = '';\r\n      },\r\n      (err: any) => {\r\n        alert(err.data);\r\n      });\r\n    }\r\n  }\r\n\r\n  public getItems() {\r\n   this.backand.object.getList('todo')\r\n    .then((res: any) => {\r\n      this.items = res.data;\r\n    },\r\n    (err: any) => {\r\n      alert(err.data);\r\n    });\r\n  }\r\n\r\n  public filterItems() {\r\n    // set q to the value of the searchbar\r\n    var q = this.searchQuery;\r\n\r\n    // if the value is an empty string don't filter the items\r\n    if (!q || q.trim() == '') {\r\n      return;\r\n    }\r\n    else{\r\n        q = q.trim();\r\n    }\r\n\r\n\r\n    let params = {\r\n      filter: [\r\n        this.backand.helpers.filter.create('name', this.backand.helpers.filter.operators.text.contains, q),\r\n      ],\r\n    }\r\n\r\n    this.backand.object.getList('todo', params)\r\n    .then((res: any) => {\r\n      this.items = res.data;\r\n    },\r\n    (err: any) => {\r\n      alert(err.data);\r\n    });\r\n  }\r\n*/\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/crud/crud.ts","import {Component, ViewChild} from '@angular/core';\r\nimport 'rxjs/Rx'\r\nimport { BackandService } from '@backand/angular2-sdk';\r\nimport { NavController } from 'ionic-angular';\r\nimport { TabsPage } from '../tabs/tabs';\r\nimport { TabsProPage } from '../tabspro/tabspro';\r\nimport { GlobalVars } from '../../providers/globalvar';\r\nimport { Platform } from 'ionic-angular';\r\nimport { Dialogs } from '@ionic-native/dialogs';\r\nimport { NFC, Ndef } from '@ionic-native/nfc';\r\n//import { LocalNotifications } from 'ionic-native';\r\n\r\n//angeblich notwendig, damit die Dialoge \"aktiviert\" werden.\r\n/*function onDeviceReady() {\r\n    alert('onDevReady'+'navigator.notification');\r\n}\r\n*/\r\n@Component({\r\n    templateUrl: 'login.html',\r\n    selector: 'page-login',\r\n})\r\nexport class LoginPage {\r\n  @ViewChild('focusInput') myInput;\r\n\r\n  public textInput:string = ''; // = eingegebene Textzeile für Commandos und User-PIN\r\n  inputID:string = ''; // = User-ID aus Text-Input-String\r\n\r\n  public items:any[] = [];\r\n  public allusers:any[] = [];\r\n  public onHandy:boolean=false;\r\n\r\n  constructor(private backand: BackandService, public navCtrl: NavController, public globVars: GlobalVars,\r\n     public plt: Platform, private dialogs: Dialogs,private nfc: NFC, private ndef: Ndef,\r\n     // private localNotifications: LocalNotifications\r\n  ) {  }\r\n\r\n\r\n  NFC_onSuccess()\r\n  { alert (\"onSuccess\")};\r\n\r\n  NFC_onError()\r\n  { alert (\"onError\")};\r\n\r\n  ionViewDidEnter() {\r\n/*    var myWindow = window.open(\"\", \"MsgWindow\", \"width=200,height=100\");\r\n    myWindow.document.write(\"<p>This is 'MsgWindow'. I am 200px wide and 100px tall!</p>\");\r\nalert(\"Test\"+this.globVars.pinLength);\r\n*/\r\n\r\n// Schedule delayed notification\r\n\r\n/* plugin local-notification v0.9. macht PRobleme beim Compilieren für Android\r\nLocalNotifications.schedule({\r\n   text: 'Alarm has expired!',\r\n   at: new Date(new Date().getTime() + 3600),\r\n  // sound: isAndroid ? 'file://sound.mp3': 'file://beep.caf',\r\n   data: { message : 'json containing app-specific information to be posted when alarm triggers' }\r\n});\r\n*/\r\n/* var browserRef = this.inAppBrowser.create(\r\n        'https://twitter.com',\r\n        \"_system\",\r\n        \"location=no,hidden=no,zoom=no\"\r\n      );\r\n*/\r\n\r\n    if (this.plt.is('cordova')) {   // soll nur dann aktiviert werden, wenn auf MOBILE (mit NFC)\r\n      this.nfc.addNdefListener(\r\n        () => {alert('successfully anttached ndef listener')},\r\n        (err) => { alert('error attaching ndef listener' + err);}\r\n      )\r\n      .subscribe((event) => {\r\n        alert('received ndef message. the tag contains: ' + event.tag);\r\n        alert('decoded tag id' + this.nfc.bytesToHexString(event.tag.id));\r\n        let message = this.ndef.textRecord(\"Hello world\",\"UTF-8\",\"8\");\r\n        this.nfc.share([message])\r\n        .then (this.NFC_onSuccess)\r\n          //  {        alert (\"onSuccess\")}\r\n        .catch (this.NFC_onError)\r\n         //{alert (\"onError\")};\r\n       });\r\n    }\r\n// DIV JS - Tests+Vorlagen ---- hier beste Stelle, um etwas auszuprobieren !!!!!!\r\n/*\r\n//  --- XML --- einzelne Phasen + xhr-status --------------\r\n    var xhr = new XMLHttpRequest();\r\n    alert('UNSENT'+ xhr.status);\r\n    xhr.open('GET', 'https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status', true);\r\n    alert('OPENED'+ xhr.status);\r\n\r\n    xhr.onprogress = function () {\r\n      alert('LOADING'+ xhr.status);\r\n    };\r\n\r\n    xhr.onload = function () {\r\n      alert('DONE'+ xhr.status);\r\n    };\r\n  //  xhr.open(\"GET\", \"http://graz-hautarzt.at/files/ri_test.php\", true);\r\n\r\n    xhr.send(null);\r\n\r\n    /**\r\n     * Outputs the following:\r\n     *\r\n     * UNSENT 0\r\n     * OPENED 0\r\n     * LOADING 200\r\n     * DONE 200\r\n\r\n     */\r\n// -------------------------------------------------------------\r\n/*\r\nvar xhr = new XMLHttpRequest();\r\nxhr.onreadystatechange = function() {\r\n    //alert(\"work... State:\"+xhr.readyState+\"Status:\"+xhr.status);\r\n    if ((xhr.readyState == 4) && (xhr.status == 200 )) { // || true )) {\r\n      //alert(\"header:\" + this.getAllResponseHeaders() + 'Status:'+ xhr.status);\r\n      //if (xhr.responseText == \"\") alert(\"no response!\")\r\n      //else\r\n      alert(\"resp:\" + xhr.responseText);\r\n      var myObj = JSON.parse(xhr.responseText);\r\n      alert(\"OBJ:\"+JSON.stringify(myObj))\r\n      //}\r\n    }\r\n    //else alert(\"FEHLER!-state:\"+xmlhttp.readyState+\"status:\"+xmlhttp.status);\r\n}\r\nxhr.open(\"GET\", \"/server/ri_test.php\", true);\r\nxhr.send();\r\n//alert(\"warten...\");\r\n*/\r\n\r\n  if (!this.globVars.autoLogout){\r\n      this.textInput = '';\r\n      setTimeout(() => {\r\n        this.myInput.setFocus();\r\n      },150);\r\n  }\r\n\r\n//not so crazy workaround for no login\r\n  if(this.globVars.testFlag==1){\r\n    this.inputID = \"333\";\r\n    this.checkUser();\r\n  }\r\n  if(this.globVars.testFlag==2){\r\n    this.inputID = \"222\";\r\n    this.checkUser();\r\n  }\r\n}\r\n/*\r\n  if (this.plt.is('core')) {\r\n      // This will only print when on Desktop\r\n      alert(\"Zeiterfassung läuft auf Desktop-PC!\")\r\n  }\r\n  else alert(\"Zeiterfassung läuft auf Handy!\");\r\n\r\nABFRAGE FÜR HANDY/DESKTOP */\r\n\r\n  public loginClear() {\r\n    this.textInput = \"\";\r\n    this.inputID =\"\";\r\n  };\r\n\r\n  public handleText(){\r\n    // wenn Eingabe mit \"r\" beginnt, dann RegistrierungsCode !!!\r\n    if (this.textInput[0]==\"r\"){\r\n      let i=-1;\r\n      do {\r\n        i++;\r\n  //      alert(\"handleText--I: \"+i+\"Anz:\"+this.globVars.devAnzahl);\r\n      }\r\n      while ((i<this.globVars.devAnzahl) && (this.globVars.ZEN_Devices[i].devCode!==this.textInput));\r\n      if (this.globVars.ZEN_Devices[i].devCode==this.textInput) {        // soll registriert werden!\r\n        alert(\"Eingabe-Text ist ein Reg.Code\"+this.globVars.ZEN_Devices[i].MA+\"---geplant: Registrierung schreiben+Eintrag, dass registriert\")//Registrierung schreiben\r\n        //weiter zu CheckUser\r\n        this.inputID=this.globVars.ZEN_Devices[i].usrPin;\r\n        this.checkUser();\r\n        return;\r\n      }\r\n      // wenn kein Reg-Code gefunden, obwohl \"r\" erster Buchstabe ist\r\n      alert(\"es wurde kein Reg-Code gefunden, obwohl 'r' erster Buchstabe ist\");\r\n      this.textInput=\"\";\r\n      return;\r\n    };\r\n    //else {     // es ist eine normale PIN-Eingabe -> Suche nach User\r\n    //alert(\"normale PIN oder hinter Reg-Code\");\r\n  /*  let tempId = \"\";\r\n    for(var i=0;i<this.globVars.pinLength;i++){\r\n      tempId += this.textInput.charAt(i);\r\n    }\r\n    this.inputID = tempId; */\r\n\r\n    this.inputID = this.textInput;\r\n    this.checkUser();\r\n    }\r\n\r\n  public handlePIN(inputNumber:string){\r\n    //if (inputNumber == \"1\"){\r\n    //  alert(\"1 wurde eingegeben-Zeit läuft\");\r\n    //};\r\n    //if (inputNumber == \"2\"){\r\n    //  alert(\"2 wurde eingegeben-Zeit angehalten\");\r\n    //};\r\n    this.inputID += inputNumber;\r\n    this.textInput += inputNumber;\r\n    if (this.inputID.length == this.globVars.pinLength){\r\n      this.checkUser();\r\n    }\r\n  }\r\n\r\n  public checkUser(){\r\n  //  alert(\"checkUser-InputID:\"+this.inputID);\r\n\r\n  // neue Idee für Tages-Arbeitszeit: wird dann auf 0 gesetzt, wenn der Übergang von\r\n  // \"Arbeit AUS\" auf \"Arbeit\"= EIN,AD-Fahrt,...Projekt2 erfolgt.(in globalvar.ts/makestamp) Das ist der Arbeitsbeginn!\r\n  // Arbeitszeit= Tag, Woche, Monats- Arbeitszeit\r\n  // wenn Übergang auf \"Arbeit AUS\" -> Tages-Arbeitszeit nicht extra speichern\r\n  // Problem, wenn neue Woche, neues Monat: da passt dann das untere Modell\r\n    let params = {\r\n      filter: [\r\n        this.backand.helpers.filter.create('password', this.backand.helpers.filter.operators.text.equals, this.inputID),\r\n      ],\r\n    }\r\n    this.backand.object.getList('Users', params)\r\n    .then((res: any) => {\r\n      this.items = res.data;\r\n      if (this.items.length > 0) {  //zumindest 1 User wurde gefunden-> nehme den 1. in der Liste\r\n        this.globVars.globCurrUser = this.items[0];\r\n/* -- andere Lösung für worktimeToday zurücksetzen über makeStamp, diese Lösung für Wochen/Monats-Arbeitszeit vielleicht gut\r\n        // COMPANY QUERY für Tages-Arbeitszeit-Prüfung + Rücksetzung\r\n        let params2 = {\r\n          filter: [\r\n            this.backand.helpers.filter.create('id', this.backand.helpers.filter.operators.text.equals, this.globVars.globCurrUser.companyid),\r\n          ],\r\n        }\r\n        this.backand.object.getList('Companies', params2)\r\n        .then((res: any) => {\r\n          this.globVars.globCurrComp = res.data[0];\r\n\r\n          // Check if last login was before today\r\n          // if monatstag != last monatstag  ...\r\n          let currentDate = new Date();\r\n          this.globVars.globCurrComp.lastLoginDay = currentDate.getDate(); // getDate=day of Month 1..31\r\n          //get every user of this company and set worktimeToday = 0\r\n          let params3 = {\r\n            filter: [\r\n              this.backand.helpers.filter.create('companyid', this.backand.helpers.filter.operators.text.equals, this.globVars.globCurrComp.id),\r\n            ],\r\n          }\r\n          this.backand.object.getList('Users', params3)\r\n          .then((res: any) => {\r\n            this.allusers = res.data;\r\n            var d = new Date(0);\r\n            for (let i=0;i<this.allusers.length;i++){\r\n              this.allusers[i].worktimeToday=d;\r\n              this.backand.object.update('Users', i+1, this.allusers[i]);\r\n            }\r\n          },\r\n          (err: any) => {\r\n            alert(err.data);\r\n          });\r\n        },\r\n          (err: any) => {\r\n          alert(err.data);\r\n        });\r\n*/\r\n        // auf Handy?  ---- wird jetzt über navigator.platform in globvar.ts gelöst\r\n          //if (this.onHandy) this.globVars.currPlatform=\"Handy\"\r\n          //else this.globVars.currPlatform=\"Desktop\";\r\n\r\n     // Time-INIT\r\n     // gleichzeitig wird ein Eintrag in die Login-DB-Objekt gemacht -> alle Logins werden dokumentiert\r\n          var loginRec: any;\r\n          this.backand.object.create('Login', \"{'name':'\"+this.globVars.globCurrUser.name+\"', 'userID':'\"+\r\n            this.globVars.globCurrUser.userID+\"', 'device':'\"+this.globVars.currPlatform +\":\"+this.plt.platforms()+\"'}\")\r\n\r\n          .then((res1:any) => {\r\n            let params = \"\";\r\n            this.backand.object.getOne('Login',res1.data.__metadata.id, params)\r\n            .then((res2: any) => {\r\n              // hole Client-Zeit\r\n              let clientMilliSec = Date.now();\r\n              this.globVars.clientDate = new Date(Date.now());\r\n              // hole Server-Zeit aus geschriebenen Login-rec\r\n              loginRec = res2.data;\r\n              this.globVars.serverDate = new Date(loginRec.createdAt+\"Z\");\r\n              let servMilliSec = this.globVars.serverDate.getTime();\r\n              this.globVars.clientDateDiff = clientMilliSec - servMilliSec;\r\n              // Beispiele: auf Ri-Erazer: +1500ms\r\n          //    alert(\"sms:\" + servMilliSec + \"cms:\" + clientMilliSec +\"clientdiff-ms\"+this.globVars.clientDateDiff+\r\n          //    \"CreatedAT=serverDate:\" + this.globVars.serverDate.toLocaleString()+\r\n          //    \"--clientDate:\" + this.globVars.clientDate.toLocaleString()+\"!\");\r\n\r\n          /*  für Ausgabe des kompletten res-records:\r\n                let Aus1Str = JSON.stringify(loginRec).substr(1,160);\r\n                let Aus2Str = JSON.stringify(loginRec).substr(160,160);\r\n                let Aus3Str = JSON.stringify(loginRec).substr(320,160);\r\n                let Aus4Str = JSON.stringify(loginRec).substr(480,160);\r\n                let Aus5Str = JSON.stringify(loginRec).substr(640,160);\r\n                let Aus6Str = JSON.stringify(loginRec).substr(800,160);\r\n                let Aus7Str = JSON.stringify(loginRec).substr(960,160);\r\n                let Aus8Str = JSON.stringify(loginRec).substr(1120,160);\r\n                let Aus9Str = JSON.stringify(loginRec).substr(1280,160);\r\n                let AusaStr = JSON.stringify(loginRec).substr(1440,160);\r\n                let AusbStr = JSON.stringify(loginRec).substr(1600,160);\r\n                alert(\"LRec1:\"+Aus1Str);\r\n                alert(\"LRec2:\"+Aus2Str);\r\n                alert(\"LRec3:\"+Aus3Str);\r\n                alert(\"LRec4:\"+Aus4Str);\r\n                alert(\"LRec5:\"+Aus5Str);\r\n                alert(\"LRec6:\"+Aus6Str);\r\n                alert(\"LRec7:\"+Aus7Str);\r\n                alert(\"LRec8:\"+Aus8Str);\r\n                alert(\"LRec9:\"+Aus9Str);\r\n                alert(\"LReca:\"+Aus9Str);\r\n                alert(\"LRecb:\"+Aus9Str);\r\n          */\r\n              // ?? ServerDatum <> letztes Timestamp-Datum? -> vorletzter Arbeitstag setzen\r\n              var d = new Date(this.globVars.globCurrUser.lasttimestampISO);\r\n              if (d.getDate() !== this.globVars.serverDate.getDate()){\r\n                // Datum d. Logins hat sich geändert -> letzter Arbeitstag speichern in vorletzter = b(efore)last...\r\n                // klappt nicht mit \"blasttimestamp\", weil Backand-DB Fehler hat : deswegen ...UTC_d (war schon für Test definiert)\r\n                // alert(\"Datum NEU: oldDate:\"+d.getDate()+\"newDate:\"+this.globVars.serverDate.getDate());\r\n                this.globVars.globCurrUser.lasttimestampUTC_d = this.globVars.globCurrUser.lasttimestampISO;\r\n              };\r\n              //var g = new Date(this.globVars.globCurrUser.lasttimestampUTC_d)\r\n              //alert (\"d-string:\"+d.toString()+\"g-string:\"+ g.toString() + \"g:\"+g.getDate());\r\n            },\r\n            (err:any) => {\r\n              alert(\"Error: Login/Res2:\"+err.data);\r\n            });\r\n          },  // then res1\r\n          (err: any) => {\r\n            alert(\"Error: Login/Res1:\"+err.data);\r\n          });\r\n         //end TimeInit\r\n\r\n\r\n\r\n  // SHOW Timestamp dependig on user level\r\n        if (this.globVars.globCurrUser.applevel == \"pro\"){\r\n          this.navCtrl.push(TabsProPage);\r\n        }\r\n        else {\r\n          this.navCtrl.push(TabsPage);\r\n        }\r\n        this.inputID = '';\r\n      }\r\n      else {\r\n        alert (\"This user doesn't exist!\");\r\n        this.inputID = '';\r\n        this.textInput = '';\r\n      }\r\n    },\r\n    (err: any) => {\r\n      alert(err.data);\r\n    });\r\n  }\r\n\r\n\r\n/*    public getAuthTokenSimple() {\r\n      this.auth_type = 'Token';\r\n      this.backand.signin(this.username, this.password)\r\n        .then((res: any) => {\r\n          this.auth_status = 'OK';\r\n          this.is_auth_error = false;\r\n          this.loggedInUser = res.data.username;\r\n          this.username = '';\r\n          this.password = '';\r\n        },\r\n        (error: any) => {\r\n          let errorMessage: string = error.data.error_description;\r\n          this.auth_status = `Error: ${errorMessage}`;\r\n          this.is_auth_error = true;\r\n          this.auth_status = 'ERROR';\r\n        }\r\n      );\r\n    }\r\n\r\n    public useAnonymousAuth() {\r\n      this.backand.useAnonymousAuth()\r\n        .then((res: any) => {\r\n          this.auth_status = 'OK';\r\n          this.is_auth_error = false;\r\n          this.loggedInUser = res.data.username;\r\n        },\r\n        (error: any) => {\r\n          let errorMessage: string = error.data.error_description;\r\n          this.auth_status = `Error: ${errorMessage}`;\r\n          this.is_auth_error = true;\r\n          this.auth_status = 'ERROR';\r\n        });\r\n    }\r\n\r\n    public socialSignin(provider: string) {\r\n      this.backand.socialSignin(provider)\r\n        .then((res: any) => {\r\n          this.auth_status = 'OK';\r\n          this.is_auth_error = false;\r\n          this.loggedInUser = res.data.username;\r\n        },\r\n        (error: any) => {\r\n          let errorMessage: string = error.data.error_description;\r\n          this.auth_status = `Error: ${errorMessage}`;\r\n          this.is_auth_error = true;\r\n          this.auth_status = 'ERROR';\r\n        }\r\n      );\r\n    }\r\n\r\n    public signOut() {\r\n      this.auth_status = null;\r\n      this.backand.signout();\r\n    }\r\n\r\n\r\n    public changePassword() {\r\n      if (this.newPassword != this.confirmNewPassword){\r\n        alert('Passwords should match');\r\n        return;\r\n      }\r\n      this.backand.changePassword(this.oldPassword, this.newPassword)\r\n        .then((res: any) => {\r\n          alert('Password changed');\r\n          this.oldPassword = this.newPassword = this.confirmNewPassword = '';\r\n        },\r\n        (err: any) => {\r\n          alert(err.data)\r\n        }\r\n      );\r\n    }\r\n*/\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}